"use strict"; var _Server_option, __classPrivateFieldSet = this && this.__classPrivateFieldSet || function (e, t, i, r, l) { if ("m" === r) throw TypeError("Private method is not writable"); if ("a" === r && !l) throw TypeError("Private accessor was defined without a setter"); if ("function" == typeof t ? e !== t || !l : !t.has(e)) throw TypeError("Cannot write private member to an object whose class did not declare it"); return "a" === r ? l.call(e, i) : l ? l.value = i : t.set(e, i), i }, __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (e, t, i, r) { if ("a" === i && !r) throw TypeError("Private accessor was defined without a getter"); if ("function" == typeof t ? e !== t || !r : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it"); return "m" === i ? r : "a" === i ? r.call(e) : r ? r.value : t.get(e) }; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.Server = void 0; const createServer_1 = require("./utils/createServer"); class Server extends createServer_1.CreateServer { constructor(e = { enableSsl: !1 }) { super(e), _Server_option.set(this, void 0), __classPrivateFieldSet(this, _Server_option, e, "f") } static(...e) { this.static_serve(...e) } config(...e) { let t = Array.isArray(e[0]) ? e[0] : "function" == typeof e[0] ? [e[0]] : []; this._config = this._config.concat(t) } get(e, ...t) { return this.route_middleware_handler("GET", e, ...t) } post(e, ...t) { this.route_middleware_handler("POST", e, ...t) } put(e, ...t) { this.route_middleware_handler("PUT", e, ...t) } patch(e, ...t) { this.route_middleware_handler("PATCH", e, ...t) } delete(e, ...t) { this.route_middleware_handler("DELETE", e, ...t) } all(e, ...t) { this.route_middleware_handler("ALL", e, ...t) } router(e, ...t) { var i; let r = Array.isArray(t[0]) ? t[0] : "function" == typeof t[0] ? [t[0]] : [], l = "object" == typeof t[t.length - 1] ? t[t.length - 1] : void 0; if (l) null === (i = null == l ? void 0 : l._routes) || void 0 === i || i.forEach(t => { let i = 1 === e.length ? "" : e.endsWith("/") ? e.slice(0, -1) : e, l = t.path.startsWith("/") ? t.path : `/${t.path}`; this.route_middleware_handler(null == t ? void 0 : t.method, `${i}${l}`, r, null == t ? void 0 : t.callback) }); else { let o = `\x1b[1;31mRoute handler missing.\x1b[0m`; console.log(Error(o)) } } use(...e) { var t; let i = "string" == typeof e[0] ? e[0] : void 0, r = Array.isArray(e[0]) ? e[0] : "function" == typeof e[0] ? [e[0]] : Array.isArray(e[1]) ? e[1] : "function" == typeof e[1] ? [e[1]] : [], l = "object" == typeof e[e.length - 1] ? e[e.length - 1] : void 0, o = "function" == typeof e[e.length - 1] && (null === (t = e[e.length - 1]) || void 0 === t ? void 0 : t.length) == 2 ? e[e.length - 1] : void 0; if (i && r.length && !o) this._config = this._config.concat(r), this._routes.filter(e => e.path === i).forEach(e => { let t = this.createHandler(r, e.callback); this.route_middleware_handler(e.method, e.path, ...r, t) }); else if (l && i) this.router(i, r, l); else if (i && o) this.route_middleware_handler("ALL", i, ...r, o); else if (2 === e.length && r.length && o) this.route_middleware_handler("ALL", "*", ...r, o), this._config = this._config.concat(r); else if (1 === e.length && o) this.route_middleware_handler("ALL", "*", ...r, o); else if (r.length) this._config = this._config.concat(r); else { let a = `\x1b[1;31mNext middleware function or the final request handler is missing.\x1b[0m`; console.log(Error(a)) } } listen(e, t) { this.server.listen(e, () => { let i = __classPrivateFieldGet(this, _Server_option, "f").enableSsl ? "\x1b[1;35mhttps\x1b[0m" : "\x1b[1;34mhttp\x1b[0m", r = `\x1b[1mðŸš€ Server running at ${i}://localhost:${e}/\x1b[0m`; console.log(r), "function" == typeof t && t() }) } } exports.Server = Server, _Server_option = new WeakMap;