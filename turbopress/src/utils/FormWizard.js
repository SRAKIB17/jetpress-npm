"use strict"; function FormWizard(e, t, l) { var n; if ((n = ["POST", "PUT", "PATCH", "ALL"]).includes((null == e ? void 0 : e.method) || "")) { let i = e.headers["content-type"], r = []; e.on("data", e => { o += e.toString(), r.push(e) }), e.on("end", () => { try { if ("application/json" == i) e.body = JSON.parse(o); else if ("application/x-www-form-urlencoded" == i) { let t = o.split("&"), n = {}; t.forEach(e => { let [t, l] = e.split("="); n[decodeURIComponent(t)] = decodeURIComponent(l || "") }), e.body = n } else if (null == i ? void 0 : i.includes("multipart/form-data")) { let a = {}, s = o.split("----------------------------"); s.forEach(e => { let t = e.match(/name="(.*)"\r\n\r\n(.*)\r\n/); if (t && 3 === t.length) { let l = t[1], n = t[2]; a[l] = n } }), e.body = a; let d = i.split("; ")[1].split("=")[1], f = Buffer.concat(r), m = f.toString("binary"), c = m.split(`--${d}`), p = []; for (let u of c) if (u.includes("filename")) { let h = u.match(/name="([^"]+)"/), y = u.match(/filename="([^"]+)"/), b = u.match(/name="([^"]+)"/), _ = u.match(/Content-Type: ([^\r\n]+)/), g = u.indexOf("\r\n\r\n") + 4, v = Buffer.from(u.substring(g), "binary"); if (y && b && _ && h) { let $ = y[1], z = b[1], P = _[1], T = { field: h[1], filename: $, name: z, type: P, size: Buffer.byteLength(v, "binary"), buffer: v }; p.push(T) } } (null == p ? void 0 : p.length) > 1 ? e.files = p : e.file = p[0] } else { let w = o; e.body = w || {} } } catch (F) { e.body = {} } l() }), e.on("error", t => { console.error(`Request error: ${t.message}`), e.body = {}, l() }) } else l(); let o = "" } Object.defineProperty(exports, "__esModule", { value: !0 }), exports.FormWizard = FormWizard;