"use strict"; var _CreateServer_instances, _CreateServer_responseHandler, _CreateServer_handleRequest, _CreateServer_commonMiddlewareCall, _CreateServer_notFoundHandler, __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (e, t, l, n) { if ("a" === l && !n) throw TypeError("Private accessor was defined without a getter"); if ("function" == typeof t ? e !== t || !n : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it"); return "m" === l ? n : "a" === l ? n.call(e) : n ? n.value : t.get(e) }, __rest = this && this.__rest || function (e, t) { var l = {}; for (var n in e) Object.prototype.hasOwnProperty.call(e, n) && 0 > t.indexOf(n) && (l[n] = e[n]); if (null != e && "function" == typeof Object.getOwnPropertySymbols) for (var r = 0, n = Object.getOwnPropertySymbols(e); r < n.length; r++)0 > t.indexOf(n[r]) && Object.prototype.propertyIsEnumerable.call(e, n[r]) && (l[n[r]] = e[n[r]]); return l }, __importDefault = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.CreateServer = void 0; const fs_1 = __importDefault(require("fs")), http_1 = require("http"), https_1 = require("https"), path_1 = __importDefault(require("path")), __1 = require(".."); class CreateServer {
    constructor(e = { enableSsl: !1 }) {
        if (_CreateServer_instances.add(this),//! Create a route array
            this._routes = [], this._config = [], e.enableSsl) { let { enableSsl: t } = e, l = __rest(e, ["enableSsl"]), n = __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_handleRequest).bind(this); this.server = (0, https_1.createServer)(l, n) } else { let { enableSsl: r } = e, s = __rest(e, ["enableSsl"]), i = __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_handleRequest).bind(this); this.server = (0, http_1.createServer)(s, i) }
    } static_serve(...e) { let t = (null == e ? void 0 : e.length) == 2 ? e[0] : null, l = (null == e ? void 0 : e.length) == 2 ? e[1] : null == e ? void 0 : e[0], n = l.endsWith("/") ? l.slice(0, -1) : l; fs_1.default.stat(n, (e, l) => { if (e) { let r = `\x1b[1;31mError: File not found!! Path: ${n}\x1b[0m`; console.log(Error(r)) } if (l.isDirectory()) fs_1.default.readdir(n, (e, l) => { if (e) { let r = `\x1b[1;31mIndex file not found! Path: ${n}\x1b[0m`; console.log(Error(r)) } l.forEach(e => { this._routes.push({ method: "GET", path: `${t || "/"}${e}`, callback: (t, l) => l.sendFile(`${n}/${e}`) }) }) }); else { let s = path_1.default.basename(n); this._routes.push({ method: "GET", path: `${t || "/"}${s}`, callback(e, t) { t.sendFile(n) } }) } }) } route_middleware_handler(e, t, ...l) { let n = Array.isArray(l[0]) ? l[0] : "function" == typeof l[0] ? [l[0]] : [], r = "function" == typeof l[l.length - 1] ? l[l.length - 1] : void 0; if (!r) { console.error(Error("Route callback function is missing.")); return } let s = this.createHandler(n, r); this._routes.push({ path: t, method: e, callback: s }) } createHandler(e, t) { return (l, n) => { let r = 0, s = () => { r < e.length ? e[r++](l, n, s) : t(l, n) }; s() } }
} exports.CreateServer = CreateServer, _CreateServer_instances = new WeakSet, _CreateServer_responseHandler = function e(t, l, n) { let r = 0; n.status = e => (r = e, n), n.json = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 200; n.writeHead(s, Object.assign(Object.assign({}, l), { "Content-Type": "application/json" })), n.end(JSON.stringify(e)) }, n.deleteCookie = (e, t) => { (0, __1.deleteCookie)(n, e, t) }, n.setCookie = (e, t, l) => { (0, __1.setCookie)(n, e, t, l) }, n.buffer = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 200, i = {}; (null == t ? void 0 : t.contentType) && (i = { "Content-Type": null == t ? void 0 : t.contentType }), n.writeHead(s, Object.assign(Object.assign({}, l), i)), n.end(e) }, n.send = (e, t, l) => { if ("object" == typeof e) n.json(e, t, l); else { let s = r || (null == t ? void 0 : t.status) || 200, i = { "Content-Type": __1.ContentType.PlainText }; (null == t ? void 0 : t.contentType) && (i = { "Content-Type": null == t ? void 0 : t.contentType }), n.writeHead(s, Object.assign(Object.assign({}, l), i)), n.end(e) } }, n.text = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 200; n.writeHead(s, Object.assign(Object.assign({}, l), { "Content-Type": "text/plain" })), n.end(e) }, n.html = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 200; n.writeHead(s, Object.assign(Object.assign({}, l), { "Content-Type": "text/html" })), n.end(e) }, n.xml = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 200; n.writeHead(s, Object.assign(Object.assign({}, l), { "Content-Type": "application/xml" })), n.end(e) }, n.redirect = (e, t, l) => { let s = r || (null == t ? void 0 : t.status) || 302; n.writeHead(s, {}), n.writeHead(s, Object.assign(Object.assign({}, l), { Location: e })), n.end() }, n.sendFile = e => { let t = fs_1.default.createReadStream(e); t.pipe(n) }, n.error = (e, t, l) => { n.writeHead(r || e, Object.assign(Object.assign({}, l), { "Content-Type": "application/json" })), n.end(t) }, __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_commonMiddlewareCall).call(this, l, n, () => { t.callback(l, n) }) }, _CreateServer_handleRequest = function e(t, l) { let n = new __1.Url(t.url || "").urlParse, r = null == n ? void 0 : n.path; r && (null == r ? void 0 : r.endsWith("/")) && (null == r ? void 0 : r.lastIndexOf("/")) > 0 && (r = null == r ? void 0 : r.slice(0, -1)); let s = this._routes.find(e => { var l, s; let i = null == e ? void 0 : e.path; i && (null == i ? void 0 : i.endsWith("/")) && (null == i ? void 0 : i.lastIndexOf("/")) > 0 && (i = null == i ? void 0 : i.slice(0, -1)); let a = (0, __1.getParams)(i, null == e ? void 0 : e.path); t.params = a, t.query = null == n ? void 0 : n.query, t.cookies = (0, __1.parseCookies)((null === (l = null == t ? void 0 : t.headers) || void 0 === l ? void 0 : l.cookie) || ""), t.location = n; let o = i === r || (null === (s = null == Object ? void 0 : Object.values(a)) || void 0 === s ? void 0 : s.length); return o && (e.method === t.method || (null == e ? void 0 : e.method) === "ALL") }); s ? __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_responseHandler).call(this, s, t, l) : __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_notFoundHandler).call(this, t, l) }, _CreateServer_commonMiddlewareCall = function e(t, l, n) { let r = this._config, s = 0, i = () => { if (s < (null == r ? void 0 : r.length)) { let e = r[s++]; if (3 == e.length) e(t, l, i); else { let a = `\x1b[1;31mNext middleware function or the final request handler is missing.\x1b[0m`; console.log(Error(a)) } } else n() }; i() }, _CreateServer_notFoundHandler = function e(t, l) {
    var n; let r = this._routes.find(e => "*" == e.path && (e.method === t.method || (null == e ? void 0 : e.method) == "ALL")); if (console.log("\x1b[1;31m404 Not Found\x1b[0m"), r) __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_responseHandler).call(this, r, t, l); else {
        l.writeHead(404, { "Content-Type": "text/plain" }); let { path: s } = (n = new __1.Url((null == t ? void 0 : t.url) || "")).urlParse; l.end(`${null == t ? void 0 : t.method}: '${s}' could not find
`)
    }
};