"use strict"; var _CreateServer_instances, _CreateServer_responseHandler, _CreateServer_handleRequest, _CreateServer_commonMiddlewareCall, _CreateServer_notFoundHandler, __createBinding = this && this.__createBinding || (Object.create ? function (e, t, n, r) { void 0 === r && (r = n); var i = Object.getOwnPropertyDescriptor(t, n); (!i || ("get" in i ? !t.__esModule : i.writable || i.configurable)) && (i = { enumerable: !0, get: function () { return t[n] } }), Object.defineProperty(e, r, i) } : function (e, t, n, r) { void 0 === r && (r = n), e[r] = t[n] }), __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (e, t) { Object.defineProperty(e, "default", { enumerable: !0, value: t }) } : function (e, t) { e.default = t }), __importStar = this && this.__importStar || function (e) { if (e && e.__esModule) return e; var t = {}; if (null != e) for (var n in e) "default" !== n && Object.prototype.hasOwnProperty.call(e, n) && __createBinding(t, e, n); return __setModuleDefault(t, e), t }, __awaiter = this && this.__awaiter || function (e, t, n, r) { return new (n || (n = Promise))(function (i, l) { function a(e) { try { o(r.next(e)) } catch (t) { l(t) } } function s(e) { try { o(r.throw(e)) } catch (t) { l(t) } } function o(e) { var t; e.done ? i(e.value) : ((t = e.value) instanceof n ? t : new n(function (e) { e(t) })).then(a, s) } o((r = r.apply(e, t || [])).next()) }) }, __classPrivateFieldGet = this && this.__classPrivateFieldGet || function (e, t, n, r) { if ("a" === n && !r) throw TypeError("Private accessor was defined without a getter"); if ("function" == typeof t ? e !== t || !r : !t.has(e)) throw TypeError("Cannot read private member from an object whose class did not declare it"); return "m" === n ? r : "a" === n ? r.call(e) : r ? r.value : t.get(e) }, __rest = this && this.__rest || function (e, t) { var n = {}; for (var r in e) Object.prototype.hasOwnProperty.call(e, r) && 0 > t.indexOf(r) && (n[r] = e[r]); if (null != e && "function" == typeof Object.getOwnPropertySymbols) for (var i = 0, r = Object.getOwnPropertySymbols(e); i < r.length; i++)0 > t.indexOf(r[i]) && Object.prototype.propertyIsEnumerable.call(e, r[i]) && (n[r[i]] = e[r[i]]); return n }, __importDefault = this && this.__importDefault || function (e) { return e && e.__esModule ? e : { default: e } }; Object.defineProperty(exports, "__esModule", { value: !0 }), exports.CreateServer = void 0, exports.getLocalFileContents = getLocalFileContents; const fs_1 = __importStar(require("fs")), http_1 = require("http"), https_1 = require("https"), path_1 = __importDefault(require("path")), __1 = require(".."); function getLocalFileContents(e) { return __awaiter(this, void 0, void 0, function* () { return (0, fs_1.readFileSync)(path_1.default.resolve(`./${e}`), { encoding: "utf8" }) }) } function walkSync(e, t = e, n, r) { let i = (0, fs_1.readdirSync)(e, { withFileTypes: !0 }); for (let l of i) { let a = e === t ? l.name : e.replace(t, "").replace(/\\/g, "/") + "/" + l.name; if (l.isDirectory()) walkSync(`${e}/${l.name}`, t, n, r); else { let s = `${n}/${a.startsWith("/") ? a.slice(1) : a}`, o = `${e}/${l.name}`.replace(/\\/g, "/"); r.push({ method: "GET", path: s, callback: (e, t) => t.sendFile(o) }) } } } class CreateServer { constructor(e = { enableSsl: !1 }) { if (_CreateServer_instances.add(this), this._routes = [], this._config = [], e.enableSsl) { let { enableSsl: t } = e, n = __rest(e, ["enableSsl"]), r = __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_handleRequest).bind(this); this.server = (0, https_1.createServer)(n, r) } else { let { enableSsl: i } = e, l = __rest(e, ["enableSsl"]), a = __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_handleRequest).bind(this); this.server = (0, http_1.createServer)(l, a) } } route_middleware_handler(e, t, ...n) { let r = Array.isArray(n[0]) ? n[0] : "function" == typeof n[0] ? [n[0]] : [], i = "function" == typeof n[n.length - 1] ? n[n.length - 1] : void 0; if (!i) { console.error(Error("Route callback function is missing.")); return } let l = this.createHandler(r, i); this._routes.push({ path: t, method: e, callback: l }) } createHandler(e, t) { return (n, r) => { let i = 0, l = () => { i < e.length ? e[i++](n, r, l) : t(n, r) }; l() } } } exports.CreateServer = CreateServer, _CreateServer_instances = new WeakSet, _CreateServer_responseHandler = function e(t, n, r) { let i = 0; r.status = e => (i = e, r), r.json = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 200; r.writeHead(l, Object.assign(Object.assign({}, n), { "Content-Type": "application/json" })), r.end(JSON.stringify(e)) }, r.deleteCookie = (e, t) => { (0, __1.deleteCookie)(r, e, t) }, r.setCookie = (e, t, n) => { (0, __1.setCookie)(r, e, t, n) }, r.buffer = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 200, a = {}; (null == t ? void 0 : t.contentType) && (a = { "Content-Type": null == t ? void 0 : t.contentType }), r.writeHead(l, Object.assign(Object.assign({}, n), a)), r.end(e) }, r.send = (e, t, n) => { if ("object" == typeof e) r.json(e, t, n); else { let l = i || (null == t ? void 0 : t.status) || 200, a = { "Content-Type": __1.ContentType.PlainText }; (null == t ? void 0 : t.contentType) && (a = { "Content-Type": null == t ? void 0 : t.contentType }), r.writeHead(l, Object.assign(Object.assign({}, n), a)), r.end(e) } }, r.text = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 200; r.writeHead(l, Object.assign(Object.assign({}, n), { "Content-Type": "text/plain" })), r.end(e) }, r.html = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 200; r.writeHead(l, Object.assign(Object.assign({}, n), { "Content-Type": "text/html" })), r.end(e) }, r.xml = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 200; r.writeHead(l, Object.assign(Object.assign({}, n), { "Content-Type": "application/xml" })), r.end(e) }, r.redirect = (e, t, n) => { let l = i || (null == t ? void 0 : t.status) || 302; r.writeHead(l, {}), r.writeHead(l, Object.assign(Object.assign({}, n), { Location: e })), r.end() }, r.sendFile = e => { if ((0, fs_1.existsSync)(e)) { let t = fs_1.default.createReadStream(e); t.pipe(r) } else __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_notFoundHandler).call(this, n, r) }, r.error = (e, t, n) => { r.writeHead(i || e, Object.assign(Object.assign({}, n), { "Content-Type": "application/json" })), r.end(t) }, __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_commonMiddlewareCall).call(this, n, r, () => { t.callback(n, r) }) }, _CreateServer_handleRequest = function e(t, n) { let r = new __1.Url(t.url || "").urlParse, i = null == r ? void 0 : r.path; i && (null == i ? void 0 : i.endsWith("/")) && (null == i ? void 0 : i.lastIndexOf("/")) > 0 && (i = null == i ? void 0 : i.slice(0, -1)); let l = this._routes.find(e => { var n, l; let a = null == e ? void 0 : e.path; a && (null == a ? void 0 : a.endsWith("/")) && (null == a ? void 0 : a.lastIndexOf("/")) > 0 && (a = null == a ? void 0 : a.slice(0, -1)); let s = (0, __1.getParams)(i, null == e ? void 0 : e.path); t.params = s, t.query = null == r ? void 0 : r.query, t.cookies = (0, __1.parseCookies)((null === (n = null == t ? void 0 : t.headers) || void 0 === n ? void 0 : n.cookie) || ""), t.location = r, t.path = r.path; let o = a === i || (null === (l = null == Object ? void 0 : Object.values(s)) || void 0 === l ? void 0 : l.length); return o && (e.method === t.method || (null == e ? void 0 : e.method) === "ALL") }); l ? __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_responseHandler).call(this, l, t, n) : __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_notFoundHandler).call(this, t, n) }, _CreateServer_commonMiddlewareCall = function e(t, n, r) { let i = this._config, l = 0, a = () => { if (l < (null == i ? void 0 : i.length)) { let e = i[l++]; if (3 == e.length) e(t, n, a); else { let s = `\x1b[1;31mNext middleware function or the final request handler is missing.\x1b[0m`; console.log(Error(s)) } } else r() }; a() }, _CreateServer_notFoundHandler = function e(t, n) {
    var r; let i = this._routes.find(e => "*" == e.path && (e.method === t.method || (null == e ? void 0 : e.method) == "ALL")); if (i) __classPrivateFieldGet(this, _CreateServer_instances, "m", _CreateServer_responseHandler).call(this, i, t, n); else {
        n.writeHead(404, { "Content-Type": "text/plain" }); let { path: l } = (r = new __1.Url((null == t ? void 0 : t.url) || "")).urlParse; n.end(`${null == t ? void 0 : t.method}: '${l}' could not find
`)
    }
};